use DEMO 

CREATE OR REPLACE TABLE MN_SALES_ORDER
(OrderNumber VARCHAR(15),
 OrderDate STRING,
 Customer_Name_Index INT PRIMARY KEY,
 Channel VARCHAR(15),	
 Warehouse_Code	VARCHAR(10),
 Delivery_Region_Index	INT NOT NULL,
 Product_Description_Index	INT FOREIGN KEY REFERENCES MN_CUSTOMER_PRODUCTS(PRODUCT_INDEX),
 Order_Quantity	INT,
 Unit_Price DECIMAL(7,2),
 Total_Revenue DECIMAL(7,2),
 Total_Uni_Cost DECIMAL(7,2));
 
 

SELECT * FROM MN_SALES_ORDER
 
 

CREATE OR REPLACE TABLE MN_CUSTOMER_NAME
(
Customer_Index INT PRIMARY KEY,
Customer_Names VARCHAR(40)
);

CREATE OR REPLACE TABLE MN_CUSTOMER_PRODUCTS
(
PRODUCT_INDEX INT PRIMARY KEY,
Product_Name VARCHAR(40) 
)


CREATE OR REPLACE TABLE MN_CUSTOMER_REGION
(
REGION_INDEX INT PRIMARY KEY,
City VARCHAR(40),
Country VARCHAR (40))


SELECT * FROM MN_SALES_ORDER LIMIT 10;
SELECT * FROM MN_CUSTOMER_PRODUCTS LIMIT 10;
SELECT * FROM MN_CUSTOMER_NAME LIMIT 10;
SELECT * FROM MN_CUSTOMER_REGION LIMIT 10;

DESCRIBE TABLE MN_SALES_ORDER

##USING LEFT OUT JOIN OR INNER JOIN ALSO WE CAN MERGE ALL 4 TALBES INTO ONE MASTER TABLE##
## HERE WE CHOOSE SALES_ORDER TABLE AS MAIN TABLE AS IT HAS ALL INFORMATION IN IT RELATED TO OTHER SMALL TABLES

CREATE OR REPLACE TABLE MN_CUSTOMER_SALES_ORDER_TBL AS 
SELECT A.*,B.PRODUCT_NAME,C.CITY,C.COUNTRY,D.CUSTOMER_NAMES FROM MN_SALES_ORDER A
LEFT OUTER JOIN MN_CUSTOMER_PRODUCTS B ON A. PRODUCT_DESCRIPTION_INDEX=B.PRODUCT_INDEX
LEFT OUTER JOIN MN_CUSTOMER_REGION C ON A.DELIVERY_REGION_INDEX= C.REGION_INDEX  
LEFT OUTER JOIN MN_CUSTOMER_NAME D ON A.CUSTOMER_NAME_INDEX=D.CUSTOMER_INDEX;

SELECT * FROM MN_CUSTOMER_SALES_ORDER_TBL LIMIT 10



